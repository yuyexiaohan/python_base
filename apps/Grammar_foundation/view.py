# coding=utf-8 
# @Time : 2018/8/21 15:23 
# @Author : achjiang
# @File : view.py

import os

'''python基础语法练习'''
# 1.深复制和浅复制
# 浅拷贝
# 是在另一块地址中创建一个新的变量或容器，但是容器内的元素的地址均是源对象的元素的地址的拷贝。也就是说新的容器中指向了旧的元素（ 新瓶装旧酒 ）。

#首先，对赋值操作我们要有以下认识：
#赋值是将一个对象的地址赋值给一个变量，让变量指向该地址（ 旧瓶装旧酒 ）。
#修改不可变对象（str、tuple）需要开辟新的空间
#修改可变对象（list等）不需要开辟新的空间

# 深拷贝
#是在另一块地址中创建一个新的变量或容器，同时容器内的元素的地址也是新开辟的，仅仅是值相同而已，是完全的副本。也就是说（ 新瓶装新酒 ）。

# 具体例子如下：

import copy
a = [1, 2, 3, 4, ['a', 'b']]  #原始对象
print ('a = ', a,'\n', 'id(a):',id(a),'id(a[4]):',id(a[4]))

b = a  #赋值，传对象的引用
c = copy.copy(a)  #对象拷贝，浅拷贝
d = copy.deepcopy(a)  #对象拷贝，深拷贝

a.append(5)  #修改对象a
e = copy.copy(a)
a[4].append('c')  #修改对象a中的['a', 'b']数组对象

print ('a = ', a,'\n', 'id(a):',id(a),'id(a[5]):',id(a[5]))
print ('b = ', b,'\n','id(b):',id(b))
print ('c = ', c,'\n','id(c):',id(c))
print ('d = ', d,'\n','id(d):',id(d))
print ('e = ', e,'\n','id(e):',id(e))
'''
输出结果：
# 最初的a,
a =  [1, 2, 3, 4, ['a', 'b']] 
 id(a): 1609522013256
 
 # 此时的a本身
a =  [1, 2, 3, 4, ['a', 'b', 'c'], 5] 
 id(a): 1609522013256
 # b地址指向a
b =  [1, 2, 3, 4, ['a', 'b', 'c'], 5] 
 id(b): 1609522013256
 # 浅拷贝只是复制了当时a的地址，所以当对a添加了‘5’时，其实a的地址已经变化了
c =  [1, 2, 3, 4, ['a', 'b', 'c']] 
 id(c): 1609522014408
d =  [1, 2, 3, 4, ['a', 'b']] 
 id(d): 1609522013448
 # 浅复制只是，在一个新的地址复制变量的各元素的值，复制后的地址都发生了变化
 e =  [1, 2, 3, 4, ['a', 'b', 'c'], 5] 
 id(e): 1480520810568
'''




# 2.装饰器、生成器、迭代器、过滤器